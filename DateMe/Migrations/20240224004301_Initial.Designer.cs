// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDB.Models;

#nullable disable

namespace MovieDB.Migrations
{
    [DbContext(typeof(MovieApplicationContext))]
    [Migration("20240224004301_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("MovieDB.Models.MovieApp", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplicationID");

                    b.HasIndex("TitleId");

                    b.ToTable("MovieApp");
                });

            modelBuilder.Entity("MovieDB.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TitleId");

                    b.ToTable("Title");

                    b.HasData(
                        new
                        {
                            TitleId = 1,
                            TitleName = "Harry Potter"
                        },
                        new
                        {
                            TitleId = 2,
                            TitleName = "Lord of the Rings"
                        },
                        new
                        {
                            TitleId = 3,
                            TitleName = "Avatar"
                        },
                        new
                        {
                            TitleId = 4,
                            TitleName = "Star Wars"
                        },
                        new
                        {
                            TitleId = 5,
                            TitleName = "Percy Jackson"
                        });
                });

            modelBuilder.Entity("MovieDB.Models.MovieApp", b =>
                {
                    b.HasOne("MovieDB.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });
#pragma warning restore 612, 618
        }
    }
}
